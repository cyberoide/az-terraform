name: 'Terraform Azure VM Deployment'

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'Name of the Virtual Machine'
        required: true
        default: 'my-vm'
      public_ip_name:
        description: 'Name of the Public IP Address'
        required: true
        default: 'my-public-ip'
      nic_name:
        description: 'Name of the Network Interface'
        required: true
        default: 'my-nic'

  # push:
  #   branches:
  #     - main

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v2

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Set Azure Environment Variables for Terraform'
      run: |
        echo "Setting Azure environment variables..."
        echo "ARM_CLIENT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v1

    - name: 'Terraform Init'
      run: terraform init
      working-directory: ./terraform
      env:
        TF_LOG: DEBUG
        TF_LOG_PATH: terraform-debug.log

    - name: 'Terraform Apply'
      run: terraform apply -auto-approve \
        -var "vm_name=${{ github.event.inputs.vm_name }}" \
        -var "public_ip_name=${{ github.event.inputs.public_ip_name }}" \
        -var "nic_name=${{ github.event.inputs.nic_name }}"
      working-directory: ./terraform
      env:
        TF_LOG: DEBUG
        TF_LOG_PATH: terraform-debug.log
